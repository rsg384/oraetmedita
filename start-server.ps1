# Script para iniciar servidor na porta 3173
# Projeto: Ora et Medita
# Autor: Rodrigo Silva Goes

param(
    [switch]$Help,
    [switch]$CheckPort
)

# Cores para output
$Red = "Red"
$Green = "Green"
$Yellow = "Yellow"
$Blue = "Blue"

# Fun√ß√£o para log colorido
function Write-Log {
    param([string]$Message, [string]$Color = "White")
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    Write-Host "[$timestamp] $Message" -ForegroundColor $Color
}

function Write-Error {
    param([string]$Message)
    Write-Log "[ERRO] $Message" $Red
}

function Write-Warning {
    param([string]$Message)
    Write-Log "[AVISO] $Message" $Yellow
}

function Write-Info {
    param([string]$Message)
    Write-Log "[INFO] $Message" $Blue
}

# Configura√ß√µes
$Port = 3173
$ProjectName = "Ora et Medita"

# Fun√ß√£o para verificar se a porta est√° em uso
function Test-Port {
    Write-Log "üîç Verificando porta $Port..." $Green
    
    try {
        $connection = Test-NetConnection -ComputerName localhost -Port $Port -InformationLevel Quiet
        if ($connection) {
            Write-Warning "Porta $Port j√° est√° em uso"
            return $true
        } else {
            Write-Log "‚úÖ Porta $Port est√° livre" $Green
            return $false
        }
    } catch {
        Write-Log "‚úÖ Porta $Port est√° livre" $Green
        return $false
    }
}

# Fun√ß√£o para verificar se Python est√° instalado
function Test-Python {
    Write-Log "üîç Verificando Python..." $Green
    
    try {
        $pythonVersion = python --version 2>$null
        if ($pythonVersion) {
            Write-Log "‚úÖ Python encontrado: $pythonVersion" $Green
            return $true
        } else {
            Write-Warning "Python n√£o encontrado"
            return $false
        }
    } catch {
        Write-Warning "Python n√£o encontrado"
        return $false
    }
}

# Fun√ß√£o para verificar se Node.js est√° instalado
function Test-Node {
    Write-Log "üîç Verificando Node.js..." $Green
    
    try {
        $nodeVersion = node --version 2>$null
        if ($nodeVersion) {
            Write-Log "‚úÖ Node.js encontrado: $nodeVersion" $Green
            return $true
        } else {
            Write-Warning "Node.js n√£o encontrado"
            return $false
        }
    } catch {
        Write-Warning "Node.js n√£o encontrado"
        return $false
    }
}

# Fun√ß√£o para iniciar servidor Python
function Start-PythonServer {
    Write-Log "üöÄ Iniciando servidor Python na porta $Port..." $Green
    
    if (Test-Port) {
        Write-Error "Porta $Port j√° est√° em uso. Encerre o processo ou use outra porta."
        return $false
    }
    
    Write-Log "üìÅ Diret√≥rio: $(Get-Location)" $Green
    Write-Log "üåê URL: http://localhost:$Port" $Green
    Write-Log "üõë Para parar o servidor: Ctrl+C" $Yellow
    
    try {
        python -m http.server $Port
    } catch {
        Write-Error "Erro ao iniciar servidor Python: $_"
        return $false
    }
}

# Fun√ß√£o para iniciar servidor Node.js
function Start-NodeServer {
    Write-Log "üöÄ Iniciando servidor Node.js na porta $Port..." $Green
    
    if (Test-Port) {
        Write-Error "Porta $Port j√° est√° em uso. Encerre o processo ou use outra porta."
        return $false
    }
    
    Write-Log "üìÅ Diret√≥rio: $(Get-Location)" $Green
    Write-Log "üåê URL: http://localhost:$Port" $Green
    Write-Log "üõë Para parar o servidor: Ctrl+C" $Yellow
    
    try {
        npx http-server -p $Port
    } catch {
        Write-Error "Erro ao iniciar servidor Node.js: $_"
        return $false
    }
}

# Fun√ß√£o para mostrar ajuda
function Show-Help {
    Write-Host "üöÄ Script de Inicializa√ß√£o do Servidor - $ProjectName" -ForegroundColor $Green
    Write-Host ""
    Write-Host "Uso: .\start-server.ps1 [OP√á√ïES]"
    Write-Host ""
    Write-Host "Op√ß√µes:"
    Write-Host "  -CheckPort              Verificar se a porta 3173 est√° em uso"
    Write-Host "  -Help                   Mostrar esta ajuda"
    Write-Host ""
    Write-Host "Funcionalidades:"
    Write-Host "  ‚Ä¢ Verifica se Python ou Node.js est√£o instalados"
    Write-Host "  ‚Ä¢ Verifica se a porta 3173 est√° livre"
    Write-Host "  ‚Ä¢ Inicia servidor HTTP na porta 3173"
    Write-Host "  ‚Ä¢ Abre o projeto no navegador"
    Write-Host ""
    Write-Host "URL: http://localhost:3173"
    Write-Host ""
    Write-Host "Exemplos:"
    Write-Host "  .\start-server.ps1                    Iniciar servidor"
    Write-Host "  .\start-server.ps1 -CheckPort         Verificar porta"
    Write-Host "  .\start-server.ps1 -Help              Mostrar ajuda"
}

# Fun√ß√£o para verificar porta
function Show-PortStatus {
    Write-Log "üìä Status da porta $Port:" $Green
    Write-Host ""
    
    if (Test-Port) {
        Write-Host "‚ùå Porta $Port est√° em uso" -ForegroundColor $Red
        Write-Host ""
        Write-Host "üí° Para liberar a porta:"
        Write-Host "  1. Abra o Gerenciador de Tarefas"
        Write-Host "  2. Procure por processos usando a porta $Port"
        Write-Host "  3. Encerre o processo"
        Write-Host ""
        Write-Host "üí° Ou use outra porta modificando o script"
    } else {
        Write-Host "‚úÖ Porta $Port est√° livre" -ForegroundColor $Green
        Write-Host ""
        Write-Host "üöÄ Pronto para iniciar o servidor!"
    }
}

# Fun√ß√£o principal
function Start-Server {
    Write-Log "üöÄ Iniciando $ProjectName na porta $Port..." $Green
    
    # Verificar se a porta est√° livre
    if (Test-Port) {
        Write-Error "Porta $Port j√° est√° em uso"
        Write-Info "Use: .\start-server.ps1 -CheckPort para verificar"
        return
    }
    
    # Verificar se Python est√° dispon√≠vel
    if (Test-Python) {
        Start-PythonServer
        return
    }
    
    # Verificar se Node.js est√° dispon√≠vel
    if (Test-Node) {
        Start-NodeServer
        return
    }
    
    # Nenhum servidor dispon√≠vel
    Write-Error "Nenhum servidor HTTP encontrado"
    Write-Info "Instale Python ou Node.js para continuar"
    Write-Info ""
    Write-Info "Python: https://www.python.org/downloads/"
    Write-Info "Node.js: https://nodejs.org/"
}

# Processar argumentos
if ($Help) {
    Show-Help
    exit 0
}

if ($CheckPort) {
    Show-PortStatus
    exit 0
}

# Executar servidor
Start-Server 